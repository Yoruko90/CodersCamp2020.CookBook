{"version":3,"sources":["src/app/Question.js","src/app/Timer.js","src/app/Stats.js","src/app/Game.js","src/GlobalData.js","src/app/MainMenu.js","src/nutritionGame.js"],"names":["Question","questions","currentQuestion","index","Math","floor","random","length","fetch","splice","apiTitle","then","res","ok","Error","json","data","calories","value","minCalories","maxCalories","catch","error","answer","parseInt","differenceBetweenCaloriesAndMinCalories","round","differenceBetweenAnswerAndCalories","abs","points","Timer","time","timeLeft","timer","question","game","document","querySelector","classList","add","setInterval","stopTimer","getResult","clearInterval","remove","Stats","newPoints","i","addingPoints","textContent","Game","startBtn","instructionSection","gameSection","imgInput","dishNameInput","checkBtn","answerInput","correctAnswer","gameOverBlock","finalScoreInput","stats","addEventListener","startRound","bind","once","event","preventDefault","contains","showQuestionSection","getQuestion","reset","imgSrc","src","name","alt","startTimer","sumUpRoundFunction","sumUpRound","result","checkAnswer","getTimeLeft","removeEventListener","getPoints","addPoints","setTimeout","endGame","console","log","API","getRecipeInformation","id","api","searchFor","MENU","mainPage","link","randomRecipe","nutritionGame","calculator","shoppingList","API_KEY","appendChildrenToElement","element","children","child","appendChild","createNavigationList","activePage","navList","createElementWithClasses","listItem","listElement","createElement","innerHTML","classes","newDOMElement","createElementWithInnerText","text","innerText","createResultBox","parentElement","forEach","dataElement","outputBox","outputPhoto","image","outputTitle","title","sendRequest","textToSearch","trim","replace","response","recipes","results","noResultsInfo","resultsSection","MainMenu","menu","logo","menuBtn","navBox","search","searchInput","searchBtn","searchInfo","backdropForSearch","modalForSearch","closeModalButton","boxForResults","placeToAppend","getElementById","body","insertBefore","inputForSearch","buttonForSearch","infoForEmptySearch","backdrop","closeSearchResultBtn","firstElementChild","lastElementChild","logoText","clearSearchInfo","btnEvent","style","opacity","zIndex","searchTitle","changeVisibilityForMenu","closeEvent","backdropClick","clickOnModal","stopPropagation","redirectEvent","Boolean","target","window","location","toggleBtn","navigationBox","toggle","menuEvent","logoFocus","animate","transform","duration","iteration"],"mappings":"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","file":"nutritionGame.9bb88f34.js","sourceRoot":"..","sourcesContent":["export class Question {\n    constructor(questions) {\n        this.currentQuestion;\n        this.questions = questions\n    }\n\n    getQuestion() {\n        const index = Math.floor(Math.random() * this.questions.length)\n        this.currentQuestion = this.questions[index];\n        this.questions.splice(index, 1);\n        return fetch(`https://api.spoonacular.com/recipes/guessNutrition?title=${this.currentQuestion.apiTitle}&apiKey=08dba6e965974fdb9c6a8cc7b0f8f4f0`)\n            .then( res =>  {\n                if (!res.ok) throw new Error('Ups...  Something went wrong!')\n                return res.json() \n            })\n            .then ( data => {\n                const calories = data.calories.value\n                this.currentQuestion.calories = calories\n                this.currentQuestion.minCalories = calories - 0.1 * calories\n                this.currentQuestion.maxCalories = calories + 0.1 * calories\n                return this.currentQuestion\n            })\n            .catch( error => {throw Error(error) })   \n    }\n    \n    checkAnswer(answer) {\n        answer = parseInt(answer)\n        const minCalories = this.currentQuestion.minCalories\n        const maxCalories = this.currentQuestion.maxCalories\n        if (answer > minCalories && answer < maxCalories) return true\n        else return false\n    }\n\n    getPoints(answer) {\n        if (answer > this.currentQuestion.maxCalories || answer < this.currentQuestion.minCalories) return 0\n        const differenceBetweenCaloriesAndMinCalories = Math.round(this.currentQuestion.calories - this.currentQuestion.minCalories)\n        const differenceBetweenAnswerAndCalories = Math.abs(answer - this.currentQuestion.calories)\n        const points = Math.abs(Math.round(differenceBetweenAnswerAndCalories / differenceBetweenCaloriesAndMinCalories * 100) - 100)\n        return points\n    }\n}","export class Timer {\n    constructor(time) {\n        this.time = time\n        this.timeLeft = this.time\n        this.timer\n    }\n\n    startTimer(question, game) {\n        document.querySelector(\".timer\").classList.add(\"active\")\n        this.timer = setInterval( () => {\n            this.timeLeft -= 1\n            if (this.timeLeft === 0) {\n                this.stopTimer()\n                game.getResult(question)\n                return true\n            }\n        }, 1000)\n    }\n\n    getTimeLeft() {\n        return this.timeLeft\n    }\n\n    stopTimer() {\n        clearInterval(this.timer)\n        document.querySelector(\".timer\").classList.remove(\"active\")\n    }\n}","export class Stats {\n    constructor(points) {\n        this.points = points\n    }\n\n    addPoints(newPoints) {\n        let i = 0;\n        const addingPoints = setInterval(() => {\n            if (i >= newPoints - 1) {\n                clearInterval(addingPoints);\n            }\n            i++;\n            this.points++;\n            document.querySelector(\".score span\").textContent = this.points; \n            return this.points\n        }, 15)\n        \n    }\n}","import { Question } from './Question.js';\nimport { Timer } from './Timer.js';\nimport { Stats } from './Stats.js';\n\nexport class Game {\n    constructor() {    \n        this.questions = [\n            {\"name\":\"Banana bread\",\"imgSrc\":\"/CodersCamp2020.CookBook/static/assets/img/banana-bread.jpg\",\"apiTitle\":\"banana+bread\"},\n            {\"name\":\"Spaghetti carbonara\",\"imgSrc\":\"/CodersCamp2020.CookBook/static/assets/img/carbonara.jpg\",\"apiTitle\":\"spaghetti+carbonara\"},\n            {\"name\":\"Cheesecake\",\"imgSrc\":\"/CodersCamp2020.CookBook/static/assets/img/cheesecake.jpg\",\"apiTitle\":\"cheesecake\"},\n            {\"name\":\"Chicken pad thai\",\"imgSrc\":\"/CodersCamp2020.CookBook/static/assets/img/chicken-pad-thai.jpg\",\"apiTitle\":\"chicken+pad+thai\"},\n            {\"name\":\"Chocolate brownie\",\"imgSrc\":\"/CodersCamp2020.CookBook/static/assets/img/chocolate-brownie.jpg\",\"apiTitle\":\"chocolate+brownie\"},\n            {\"name\":\"Hamburger\",\"imgSrc\":\"/CodersCamp2020.CookBook/static/assets/img/hamburger.jpg\",\"apiTitle\":\"Hamburger\"},\n            {\"name\":\"Spaghetti aglio et olio\",\"imgSrc\":\"/CodersCamp2020.CookBook/static/assets/img/spaghetti-aglio-olio.jpg\",\"apiTitle\":\"spaghetti+aglio+olio\"},\n            {\"name\":\"Spaghetti bolognese\",\"imgSrc\":\"/CodersCamp2020.CookBook/static/assets/img/spaghetti-bolognese.jpg\",\"apiTitle\":\"spaghetti+bolognese\"},\n            {\"name\":\"Strawberry shake\",\"imgSrc\":\"/CodersCamp2020.CookBook/static/assets/img/strawberry-shake.jpg\",\"apiTitle\":\"strawberry+shake\"},\n            {\"name\":\"Vanilla ice cream\",\"imgSrc\":\"/CodersCamp2020.CookBook/static/assets/img/vanilla-ice-cream.jpg\",\"apiTitle\":\"vanilla+ice+cream\"},\n        ]\n        this.startBtn = document.querySelector(\".start\")\n        this.instructionSection = document.querySelector(\".instruction\")\n        this.gameSection = document.querySelector(\".game\")\n        this.imgInput = document.querySelector(\".dish-img\")\n        this.dishNameInput = document.querySelector(\".dish-name\")\n        this.checkBtn = document.querySelector(\".submit\")\n        this.answerInput = document.querySelector(\".answer\")\n        this.correctAnswer = document.querySelector(\".correct-answer\")\n        this.gameOverBlock = document.querySelector(\".game-over\")\n        this.finalScoreInput = document.querySelector(\".game-over .score span\")\n\n        this.stats = new Stats(0)\n        \n        document.addEventListener('DOMContentLoaded', () => {\n            this.startBtn.addEventListener(\"click\", this.startRound.bind(this), {once: true})\n            this.checkBtn.addEventListener(\"click\", (event) => event.preventDefault())\n        })\n    }\n\n    showQuestionSection() {\n        this.gameSection.classList.add(\"active\")\n        this.instructionSection.classList.remove(\"active\")\n    }\n\n    async startRound() {\n        const question = new Question(this.questions)\n        const timer = new Timer(15)\n        if (!this.gameSection.classList.contains(\"active\")) this.showQuestionSection()\n        const currentQuestion = await question.getQuestion()\n        this.reset()\n        this.imgInput.src = await currentQuestion.imgSrc\n        this.imgInput.alt = await currentQuestion.name\n        this.dishNameInput.textContent = await currentQuestion.name\n        timer.startTimer(await question, this)\n        \n        this.sumUpRoundFunction = this.sumUpRound.bind(this, question, timer)\n        this.checkBtn.addEventListener(\"click\", this.sumUpRoundFunction, {once: true})  \n    }\n\n    sumUpRound(question, timer, event) {\n        event.preventDefault();\n        timer.stopTimer();\n        const result = question.checkAnswer(this.answerInput.value)\n        const timeLeft = timer.getTimeLeft()\n        this.getResult(question, result)\n    }\n\n    getResult(question, result) {\n        this.checkBtn.removeEventListener(\"click\", this.sumUpRoundFunction)\n        if (result) {\n            this.correctAnswer.textContent = `Correct answer is: ${question.currentQuestion.calories}.`\n            this.imgInput.classList.add(\"true\")\n            const points = question.getPoints(+this.answerInput.value)\n            this.stats.addPoints(points)\n            if (this.questions.length < 6) setTimeout(this.endGame.bind(this), points * 15)\n            else setTimeout(this.startRound.bind(this), points * 15 + 500)\n        } else {\n            this.imgInput.classList.add(\"false\")\n            this.correctAnswer.textContent = `Correct answer is: ${question.currentQuestion.calories}.`\n            if (this.questions.length < 6) this.endGame()\n            else setTimeout(this.startRound.bind(this), 500)\n        }\n    }\n\n    reset() {\n        this.correctAnswer.textContent = \"...\";\n        this.answerInput.value = \"\";\n        this.imgInput.classList.remove(\"false\");\n        this.imgInput.classList.remove(\"true\");\n    }\n\n    endGame() {\n        setTimeout(() => {\n            console.log(\"Koniec gry!\")\n            this.reset()\n            this.gameOverBlock.classList.add(\"active\")\n            this.finalScoreInput.textContent = this.stats.points\n        }, 1000)\n    }\n}","export const API = {\n    getRecipeInformation: (id, api) => `https://api.spoonacular.com/recipes/${id}/information?apiKey=${api}`,\n    searchFor: (value, api) => `https://api.spoonacular.com/recipes/complexSearch?query=${value}&number=9&apiKey=${api}`,\n}\n\nexport const MENU = {\n    mainPage: { name: 'Main Page', link: '/CodersCamp2020.CookBook/index.html' },\n    randomRecipe: { name: 'Random Recipe', link: '/CodersCamp2020.CookBook/random.html' },\n    nutritionGame: { name: 'Nutrition Game', link: '/CodersCamp2020.CookBook/nutritionGame.html' },\n    calculator: { name: 'Calculator', link: '/CodersCamp2020.CookBook/calculator.html' },\n    shoppingList: { name: 'Shopping List', link: '/CodersCamp2020.CookBook/list.html' }\n}","import {API, MENU} from '../GlobalData.js';\n\nconst API_KEY = 'a69c65ede3bb4ac3b262c5b425b4f835';\n\n//append children to element\nexport const appendChildrenToElement = (element, ...children) => {\n  for (let child in children) {\n    element.appendChild(children[child])\n  }\n  return element\n}\n\n//create navigation for menu\nexport const createNavigationList = (activePage) => {\n  const navList = createElementWithClasses('ul', 'navigationList'); \n  for (let listItem in MENU) {\n    console.log(MENU[listItem])\n    if (MENU[listItem] !== activePage ) {\n      const listElement = document.createElement('li');\n      listElement.innerHTML = `<a href=${MENU[listItem].link}>${MENU[listItem].name}</a>`\n      navList.appendChild(listElement)\n    }\n  }\n  return navList\n}\n\n//create DOM element with included classes\nexport const createElementWithClasses = (element, ...classes) => {\n  const newDOMElement = document.createElement(element);\n  newDOMElement.classList.add(...classes);\n\n  return newDOMElement\n}\n\n//create DOM element with inner text\nexport const createElementWithInnerText = (element, text, ...classes) => {\n  let newDOMElement = document.createElement(element);\n  newDOMElement.classList.add(...classes);\n  newDOMElement.innerText = text;\n\n  return newDOMElement\n}\n\n//create box for one result of search\nexport const createResultBox = (data, parentElement) => {\n  data.forEach( dataElement => {\n    const outputBox = document.createElement('article');\n    outputBox.id = dataElement.id;\n    const outputPhoto = document.createElement('img');\n    outputPhoto.src = dataElement.image;\n    const outputTitle = document.createElement('p');\n    outputTitle.innerText = dataElement.title;\n  \n    appendChildrenToElement(outputBox, outputPhoto, outputTitle);\n    appendChildrenToElement(parentElement, outputBox)\n  })\n}\n\n//function to send request\n export const sendRequest = (value, parentElement) => {\n  //prepare search text to send request\n  const textToSearch = value.value.trim().replace('', '%20');\n\n  fetch(API.searchFor(textToSearch, API_KEY))\n  .then(response => {\n    if (!response.ok) {\n      throw new Error('Ups...  Something went wrong!');\n    } \n    return response.json()\n  })\n  .then(recipes => {\n    if (recipes.results.length === 0) {\n      const noResultsInfo = document.createElement('p');\n      noResultsInfo.innerText = `Sorry, there isn't any result for Your search`;\n      parentElement.appendChild(noResultsInfo)\n    } else {\n      createResultBox(recipes.results, parentElement)\n    }\n  })\n  .catch(error => {\n    resultsSection.innerHTML = `<p>${error}</p>`;\n    console.log(error)});\n}\n\nexport const MainMenu = (activePage) => {\n\n  //CREATE MENU STRUCTURE\n\n  const menu = createElementWithClasses('nav', 'menu', 'container')\n  const logo = createElementWithClasses('div', 'logo')\n  logo.innerHTML =`<a href=${MENU.mainPage.link}>CookBook</a>`;\n  //button to show and hide menu on mobile\n  const menuBtn = createElementWithInnerText('button', 'Click', 'navigationBtn')\n  //create box for navigation & search\n  const navBox = createElementWithClasses('div', 'navigationBox', 'navigationBoxHidden')\n  //create navigation list with items\n  const navList = createNavigationList(activePage)\n\n  //create search\n  const search = createElementWithClasses('form', 'search')\n  const searchInput = createElementWithClasses('input',);\n  const searchBtn = createElementWithInnerText('button', 'Search')\n  const searchInfo = createElementWithInnerText('span', 'Please, insert text!', 'tooltip')\n  appendChildrenToElement(search, searchInput, searchBtn, searchInfo);\n\n  appendChildrenToElement(navBox, navList, search)\n  appendChildrenToElement(menu, logo, menuBtn, navBox)\n\n  //CREATE STRUCTURE FOR SEARCH OUTPUT\n  const backdropForSearch = createElementWithClasses('div', 'backdrop');\n  const modalForSearch = createElementWithClasses('div', 'modal', 'container');\n  const closeModalButton = createElementWithInnerText('button', 'x');\n  const boxForResults = document.createElement('section');\n\n  appendChildrenToElement(modalForSearch, closeModalButton , boxForResults);\n  appendChildrenToElement(backdropForSearch, modalForSearch);\n\n  //APPEND MENU AND SEARCH STRUCTURE TO PAGE\n  const placeToAppend = document.getElementById('swquiz-app');\n  document.body.insertBefore(menu, placeToAppend);\n  document.body.insertBefore(backdropForSearch, placeToAppend)\n\n  //SEARCH\n\n  //elements' of DOM to manipulate\n  const inputForSearch = document.querySelector('form input');\n  const buttonForSearch = document.querySelector('form button'); \n  const infoForEmptySearch = document.querySelector('.tooltip');\n  const backdrop = document.querySelector('.backdrop');\n  const closeSearchResultBtn = backdrop.firstElementChild.firstElementChild;\n  const resultsSection = backdrop.firstElementChild.lastElementChild;\n  const logoText = document.querySelector('.logo');\n\n  //clear input value\n  const clearInput = () => {\n    inputForSearch.value = ''\n  } \n\n  //clear search info (about empty value)\n  const clearSearchInfo = () => {\n    infoForEmptySearch.classList.remove('active')\n  }\n\n  inputForSearch.addEventListener('click', event => clearSearchInfo())\n\n  //send request and generate output \n  buttonForSearch.addEventListener( 'click' , btnEvent => {\n    btnEvent.preventDefault();\n\n    if (inputForSearch.value !== '') {\n    clearSearchInfo();\n\n    //set backdrop visible\n    backdrop.style.opacity = 1;\n    backdrop.style.zIndex = 100;\n\n    //create information about search value in modal\n    const searchInfo = `Results for search: ${inputForSearch.value}`\n    const searchTitle = document.createElement('h2');\n    searchTitle.innerText = searchInfo;\n    resultsSection.appendChild(searchTitle);\n\n    sendRequest(inputForSearch, resultsSection)\n    changeVisibilityForMenu();\n    clearInput();  \n    } else {\n      infoForEmptySearch.classList.add('active')\n    }\n  });\n\n  //close search results\n  closeSearchResultBtn.addEventListener( 'click', closeEvent => {\n    closeEvent.preventDefault();\n\n    //set backdrop hidden\n    backdrop.style.opacity = 0;\n    backdrop.style.zIndex = -100;\n\n    //clear search results\n    resultsSection.innerText = ''\n  })\n\n  //close search results by click on backdrop\n  backdrop.addEventListener('click', backdropClick => {\n    //set backdrop hidden\n    backdrop.style.opacity = 0;\n    backdrop.style.zIndex = -100;\n\n    //clear search results\n    resultsSection.innerText = ''\n  })\n\n  backdrop.firstElementChild.addEventListener('click', clickOnModal => {\n    clickOnModal.stopPropagation();\n  })\n\n  //redirect to recipe site (implement '==' instead '===' on purpose!)\n  resultsSection.addEventListener('click', redirectEvent => {\n    if(Boolean(redirectEvent.target.id) == '1') {\n      window.location.replace(`/CodersCamp2020.CookBook/recipe.html?id=${redirectEvent.target.id}`)\n    }\n  })\n\n  //TOOGLE MENU\n  const toggleBtn = document.querySelector('.navigationBtn');\n  const navigationBox = document.querySelector('.navigationBox')\n\n  //change visibility of menu for mobile\n  const changeVisibilityForMenu = () => {\n    navigationBox.classList.toggle('navigationBoxHidden');\n  }\n\n  toggleBtn.addEventListener('click', menuEvent => {\n      changeVisibilityForMenu();\n      clearSearchInfo();\n  })\n\n  //ANIMATION FOR LOGO\n  logoText.addEventListener( 'mouseenter', logoFocus => {\n    console.log('hej')\n    logoText.animate(\n      [{ transform: 'rotateY(0deg)'},\n      { transform: 'rotateY(360deg)' }],\n      {duration: 500,\n        iteration: 1\n      }\n\n    )\n  })\n}","// import 'regenerator-runtime/runtime';\nimport { Game } from './app/Game.js';\nimport { MainMenu } from './app/MainMenu.js'\nimport { MENU } from './GlobalData.js'\n\nMainMenu(MENU.nutritionGame)\nconst nutritionGame = new Game() "]}